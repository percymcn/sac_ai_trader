services:
  api:
    build: .
    container_name: sac_api
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --proxy-headers
    env_file: .env
    depends_on: [db, redis]
    volumes: [".:/code"]
    working_dir: /code
    ports: ["8000:8000"]
    restart: unless-stopped

  worker:
    build: .
    container_name: sac_worker
    command: celery -A app.core.celery_app.celery_app worker -Q default,ingest,retrain,exec,monitor -l INFO --concurrency=2
    env_file: .env
    depends_on: [api, redis, db]
    volumes: [".:/code"]
    working_dir: /code
    restart: unless-stopped

  beat:
    build: .
    container_name: sac_beat
    command: celery -A app.core.celery_app.celery_app beat -l INFO
    env_file: .env
    depends_on: [worker, redis, db]
    volumes: [".:/code"]
    working_dir: /code
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: sac_redis
    # internal only (avoid port conflicts)
    ports: []
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: sac_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - sac_pg:/var/lib/postgresql/data
    ports: []
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: sac_tunnel
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: ${CF_TUNNEL_TOKEN}
    depends_on: [api]
    restart: unless-stopped

volumes:
  sac_pg:
